local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ChatService = game:GetService("Chat")

local player = Players.LocalPlayer
local targetName = "Raccoon"

local function announceAppearance(model)
    for _, obj in ipairs(model:GetDescendants()) do
        local msgParts = {}

        -- メッシュID・テクスチャID（MeshPart / SpecialMesh）
        if obj:IsA("MeshPart") or obj:IsA("SpecialMesh") then
            if obj.MeshId and obj.MeshId ~= "" then
                table.insert(msgParts, "MeshId: "..obj.MeshId)
            end
            if obj.TextureID and obj.TextureID ~= "" then
                table.insert(msgParts, "TextureID: "..obj.TextureID)
            end
        end

        -- Color3（Color）
        if obj:IsA("BasePart") or obj:IsA("Decal") then
            if obj.Color then
                table.insert(msgParts, ("Color: %s"):format(tostring(obj.Color)))
            end
        end

        -- サイズ
        if obj:IsA("BasePart") then
            table.insert(msgParts, ("Size: %s"):format(tostring(obj.Size)))
        end

        -- 形状（Partのみ）
        if obj:IsA("Part") then
            table.insert(msgParts, ("Shape: %s"):format(obj.Shape.Name))
        end

        -- メッセージがあればチャットに送る
        if #msgParts > 0 then
            local msg = string.format("[%s] %s - %s", targetName, obj.Name, table.concat(msgParts, ", "))
            if player.Character and player.Character:FindFirstChild("Head") then
                ChatService:Chat(player.Character.Head, msg, Enum.ChatColor.Blue)
            end
            print(msg)
        end
    end
end

local function onDescendantAdded(obj)
    if obj:IsA("Model") and obj.Name == targetName then
        task.wait(0.5)
        announceAppearance(obj)
    end
end

for _, obj in ipairs(Workspace:GetDescendants()) do
    if obj:IsA("Model") and obj.Name == targetName then
        announceAppearance(obj)
    end
end

Workspace.DescendantAdded:Connect(onDescendantAdded)
